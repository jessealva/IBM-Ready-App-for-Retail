defaultTasks 'help'

/**************************************************************************************************************
 **************************************************************************************************************
 *****************************                                                *********************************
 *****************************               Set up                           *********************************
 *****************************                                                *********************************
 **************************************************************************************************************
 **************************************************************************************************************/

//configurations 
configurations {
	sshAntTask
}

//repositories
repositories {
	mavenCentral()
}

//dependencies
dependencies {
	sshAntTask 'org.apache.ant:ant-jsch:1.9.2'
}

ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp', classpath: configurations.sshAntTask.asPath)
ant.taskdef(name: 'ssh', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.SSHExec', classpath: configurations.sshAntTask.asPath)

/**************************************************************************************************************
 **************************************************************************************************************
 *****************************                                                *********************************
 *****************************              Command Line arguments            *********************************
 *****************************                                                *********************************
 *****************************                                                *********************************
 **************************************************************************************************************
 **************************************************************************************************************/

//command line arguments
def userFromJenkins = System.getProperty("user")
def commandLineHost = System.getProperty("host")
def passwordFromJenkins = System.getProperty("password", "foobar")
def commandLineProductName = System.getProperty("productName")
def commandLineVersionNumber = System.getProperty("versionNumber")
def commandLineDocsLocation = System.getProperty("docsLocation")

if(passwordFromJenkins != null && !"".equals(passwordFromJenkins)){
	passwordFromJenkins = passwordFromJenkins.split(":")[1]
}

if(userFromJenkins != null && !"".equals(userFromJenkins)){
	userFromJenkins = userFromJenkins.split(":")[0]
} 

//set the command line arguments
project.ext.set("user", userFromJenkins)
project.ext.set("host", commandLineHost)
project.ext.set("password", passwordFromJenkins)
project.ext.set("productName", commandLineProductName)
project.ext.set("versionNumber", commandLineVersionNumber)
project.ext.set("docsLocation", commandLineDocsLocation)

/**************************************************************************************************************
 **************************************************************************************************************
 *****************************                                                *********************************
 *****************************                    Tasks                       *********************************
 *****************************                                                *********************************
 **************************************************************************************************************
 **************************************************************************************************************/

// delete the directory
task deleteDirectory << {
ant.ssh(host:"${host}", username: "${user}", password:"${password}", command:"rm -rf /var/www/html/ReadyApps/${productName}-${versionNumber}")
}

//make the directory to put the docs into
task makeDirectory(dependsOn: deleteDirectory) << {
	ant.ssh(host:"${host}", username: "${user}", password:"${password}", command:"mkdir -p /var/www/html/ReadyApps/${productName}-${versionNumber}")
}

//scp the docs into the proper folder
task scpDocs(dependsOn: makeDirectory) << {
	//call ant scp
	ant.scp(todir:"${user}@${host}:/var/www/html/ReadyApps/${productName}-${versionNumber}", password:"${password}", verbose:'true'){
		fileset(dir:"${docsLocation}") {
			include(name:'**/*')
		}
	}
}

/**************************************************************************************************************
 **************************************************************************************************************
 *****************************                                                *********************************
 *****************************             Order to run tasks at              *********************************
 *****************************                                                *********************************
 **************************************************************************************************************
 **************************************************************************************************************/

scpDocs.mustRunAfter(makeDirectory)
makeDirectory.mustRunAfter(deleteDirectory)