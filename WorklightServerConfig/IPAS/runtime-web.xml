<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Licensed Materials - Property of IBM
			 5725-I43 (C) Copyright IBM Corp. 2006, 2013. All Rights Reserved.
			 US Government Users Restricted Rights - Use, duplication or
             disclosure restricted by GSA ADP Schedule Contract with IBM Corp. --><web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="WebApp_ID" version="2.4" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">


	<display-name>Worklight</display-name>

	<servlet>
		<servlet-name>NodeCallbackServlet</servlet-name>
		<servlet-class>com.worklight.integration.node.NodeCallbackServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>NodeCallbackServlet</servlet-name>
		<url-pattern>/node/integration/*</url-pattern>
	</servlet-mapping>
	<!-- token end-point for externalizing WL security -->
    <servlet>
        <servlet-name>AuthorizationServer</servlet-name>
        <servlet-class>com.ibm.websphere.jaxrs.server.IBMRestServlet</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.worklight.oauth.AuthorizationServerApplication</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>AuthorizationServer</servlet-name>
        <url-pattern>/oauth/*</url-pattern>
    </servlet-mapping>
	<!-- Gadgets -->
	<servlet>
		<servlet-name>GadgetAPIServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.GadgetAPIServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>GadgetAPIServlet</servlet-name>
		<url-pattern>/apps/services/api/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>RandomNumberGenerationServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.RandomNumberGenerationServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RandomNumberGenerationServlet</servlet-name>
		<url-pattern>/apps/services/random/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ClientLogUploaderServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ClientLogUploaderServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ClientLogUploaderServlet</servlet-name>
		<url-pattern>/apps/services/loguploader/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ClientConfigProfileServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ClientConfigProfileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ClientConfigProfileServlet</servlet-name>
		<url-pattern>/apps/services/configprofile/*</url-pattern>
	</servlet-mapping>	
	<servlet>
		<servlet-name>ReachabilityServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ReachabilityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ReachabilityServlet</servlet-name>
		<url-pattern>/apps/services/reach</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>PreviewServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.PreviewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PreviewServlet</servlet-name>
		<url-pattern>/apps/services/preview/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>WebApplicationServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.WebApplicationServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WebApplicationServlet</servlet-name>
		<url-pattern>/apps/services/www/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>BinaryApplicationDownloadServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.BinaryApplicationDownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BinaryApplicationDownloadServlet</servlet-name>
		<url-pattern>/apps/services/download/*</url-pattern>
	</servlet-mapping>


	<listener>
		<listener-class>com.worklight.server.bundle.project.JeeProjectActivator</listener-class>
	</listener>
	
	<filter>
		<filter-name>authenticationFilter</filter-name>
		<filter-class>com.worklight.core.auth.impl.AuthenticationFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>authenticationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Vitality -->
	<servlet>
		<servlet-name>VitalityServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.VitalityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>VitalityServlet</servlet-name>
		<url-pattern>/ws/rest/vitality</url-pattern>
	</servlet-mapping>

	<!-- Invoke back end procedure -->
	<servlet>
		<servlet-name>InvokeProcServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.InvokeProcServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>InvokeProcServlet</servlet-name>
		<url-pattern>/invoke</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>PushSubscriptionServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.SMSServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PushSubscriptionServlet</servlet-name>
		<url-pattern>/subscribeSMS</url-pattern>
	</servlet-mapping>
		
	<servlet>
		<servlet-name>SMSSubscriptionServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.SMSServlet</servlet-class>
		<init-param>
			<param-name>requestFrom</param-name>
			<param-value>gateway</param-value>
    	</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SMSSubscriptionServlet</servlet-name>
		<url-pattern>/receiveSMS</url-pattern>
	</servlet-mapping>
	
	<!-- Direct update -->
	<servlet>
		<servlet-name>DirectUpdateServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.DirectUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DirectUpdateServlet</servlet-name>
		<url-pattern>/directUpdate/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>USSDServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.USSDServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>USSDServlet</servlet-name>
		<url-pattern>/ussd/*</url-pattern>
	</servlet-mapping>
	
	<!-- DEV servlets -->
	<servlet>
		<servlet-name>DevRootServlet</servlet-name>
		<servlet-class>com.worklight.server.dev.DevRootServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DevRootServlet</servlet-name>
		<url-pattern>/dev/*</url-pattern>
	</servlet-mapping>
	<!-- End of DEV servlets -->

    <mime-mapping>
        <extension>manifest</extension>
        <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
	
	<resource-ref>
      <description>Worklight Server Database</description>
      <res-ref-name>jdbc/WorklightDS</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
	</resource-ref>

	<resource-ref>
      <description>Reports Database</description>
      <res-ref-name>jdbc/WorklightReportsDS</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
	</resource-ref>
	
    <env-entry>
    	<description>
    		[REQUIRED] The IP address or host name of the computer running IBM Worklight.
			If the IBM Worklight Server is behind a reverse proxy, the value is the IP address or host name of the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: IP address of current server.
    	</description>
        <env-entry-name>publicWorkLightHostname</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
	    	[REQUIRED] The port for accessing the IBM Worklight Server.
			If the IBM Worklight Server is behind a reverse proxy, the value is the port for accessing the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: Same as local.httpPort.
    	</description>
        <env-entry-name>publicWorkLightPort</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[REQUIRED] The protocol for accessing the IBM Worklight Server.
			The valid values are HTTP and HTTPS. If the IBM Worklight Server is behind a reverse proxy, the value is the protocol for accessing the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: HTTP.
    	</description>
        <env-entry-name>publicWorkLightProtocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

	<env-entry>
		<description>[OPTIONAL] Idle session timeout in minutes. Default: 10.</description>
		<env-entry-name>serverSessionTimeout</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

    <env-entry>
    	<description>[OPTIONAL] Is reports active (true/false). Default: false.</description>
        <env-entry-name>reports.exportRawData</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] Shows whether Google GCM must be accessed through a proxy. Default is false.</description>
        <env-entry-name>push.gcm.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] GCM proxy host. Negative value means default port.</description>
        <env-entry-name>push.gcm.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] GCM proxy port. Use -1 for the default port, Default is -1.</description>
        <env-entry-name>push.gcm.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Can be either http or https.</description>
        <env-entry-name>push.gcm.proxy.protocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] Proxy user name, if the proxy requires authentication. Empty user name means no authentication.</description>
        <env-entry-name>push.gcm.proxy.user</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

 	<env-entry>
	    <description>[OPTIONAL] Proxy password, if the proxy requires authentication.</description>
        <env-entry-name>push.gcm.proxy.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Shows whether APNS must be accessed through a proxy. Default: false</description>
        <env-entry-name>push.apns.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] APNS proxy host</description>
        <env-entry-name>push.apns.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] APNS proxy port</description>
        <env-entry-name>push.apns.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
		<description>[OPTIONAL] Indicates if push sms proxy is enabled. Default: false</description>
        <env-entry-name>push.sms.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy host</description>
        <env-entry-name>push.sms.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy port</description>
        <env-entry-name>push.sms.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy protocol</description>
        <env-entry-name>push.sms.proxy.protocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy user</description>
        <env-entry-name>push.sms.proxy.user</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy password</description>
        <env-entry-name>push.sms.proxy.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] The path to the keystore, relative to the server folder in the Worklight Project, for example: conf/my-cert.jks</description>
        <env-entry-name>wl.ca.keystore.path</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The type of the keystore file. Valid values are jks or pkcs12.</description>
        <env-entry-name>wl.ca.keystore.type</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] The password to the keystore file.</description>
        <env-entry-name>wl.ca.keystore.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The alias of the entry where the private key and certificate are stored, in the keystore.</description>
        <env-entry-name>wl.ca.key.alias</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The password to the alias in the keystore.</description>
        <env-entry-name>wl.ca.key.alias.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore location. Default: conf/default.keystore.</description>
        <env-entry-name>ssl.keystore.path</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore type. Valid keystore types: jks, PKCS12. Default: jks.</description>
        <env-entry-name>ssl.keystore.type</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore password.Default: worklight.</description>
        <env-entry-name>ssl.keystore.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
	
	<env-entry>
		<description>[OPTIONAL] Applications and Adapters cluster data synchronization interval. Default: 2.</description>
        <env-entry-name>cluster.data.synchronization.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Deployables folder cleanup task interval (in seconds). Default: 86400.</description>
        <env-entry-name>deployables.cleanup.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] An interval (sec) for a cleanup task that cleans the database of orphaned and expired single-sign-on login contexts. Default: 5</description>
        <env-entry-name>sso.cleanup.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that indicates whether to send messages that are logged by the 
    		IBM Worklight Server to the IWAP server. If this value is true, all logs that are specified in 
    		com.worklight settings are forwarded to the IWAP server. The default value is true. 
    		This setting is only supported on IBM Worklight production servers. It s not supported on the 
    		IBM Worklight Studio development environment. 
    	</description>
        <env-entry-name>wl.analytics.logs.forward</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] The url to which analytics data are sent. Typically, this url is for the IWAP server that comes 
    		with the IBM Worklight installation. The URL is of the form [protocol]://[iwapURL]/iwap/v1/events/[eventName]. 
    		Currently, the only event name that is used is app_activities. 
    		Example: http://myServer.austin.ibm.com/iwap/v1/events/app_activities
    	</description>
        <env-entry-name>wl.analytics.url</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] The basic authorized user name for the URL entered in wl.analytics.url.</description>
        <env-entry-name>wl.analytics.username</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] The basic authorized password for the URL entered in wl.analytics.url.</description>
        <env-entry-name>wl.analytics.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    	[OPTIONAL] Sets the maximum number of queues that the IBM Worklight server can create to hold 
    	analytics data before it sends the data to the server. When this number of queues is reached, 
    	the IBM Worklight server rejects any new analytics data until the current data finishes processing. 
    	Default: 20.
    	</description>
        <env-entry-name>wl.analytics.queues</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    	[OPTIONAL] Sets the number of individual analytics data that each queue can hold. 
    	The total number of analytics data that the server can hold at one time before 
    	it begins to drop data is (wl.analytics.queues * wl.analytics.queue.size). Default: 10.
    	</description>
        <env-entry-name>wl.analytics.queue.size</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    	[OPTIONAL] Sets the name of the IBM Worklight adapter that is the designated receiver of uploaded
    	client log data.  In order to receive uploaded client log data in an adapter, you must deploy an
    	adapter named the same as the value of this property.  Default: "WLClientLogReceiver".
    	</description>
        <env-entry-name>wl.clientlogs.adapter.name</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that will enable the access management
    		features on the worklight server. If the access management features have been 
    		enabled, each time a device attempts to connect to the server, it will be checked
    		against the backend for its access rights.
    	</description>
        <env-entry-name>wl.device.enableAccessManagement</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that will enable / disable the device
    		tracking features on the worklight server. If the device tracking features have been 
    		enabled, every device connecting to the server is tracked and the device can be 
    		managed and the license reports generated will include the tracked devices in the  
    		report. Default: true 
    	</description>
        <env-entry-name>wl.device.tracking.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
   
    <env-entry>
    	<description>
    	    [OPTIONAL] The number of days of inactivity before a device is available for 
    	    decommissioning. Default: 90
    	</description>
        <env-entry-name>wl.device.decommission.when</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] The number of days after which a decommissioned device can be archived by 
    		Worklight Server. Default: 90
    	</description>
        <env-entry-name>wl.device.archiveDecommissioned.when</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <!-- JMX and clustering support properties -->
    <env-entry>
    	<description>
    		Server type. values: Liberty / WAS / Tomcat  
    		Default: if missing will try to guess server type (less reliable).
    	</description>
        <env-entry-name>ibm.worklight.topology.platform</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>WAS</env-entry-value>
    </env-entry>

    <env-entry>
    	<description>
    	    In addition to server type, specify here the server topology. 
    	    Allowed Values: Standalone / Cluster / Farm
    	    Default: Standalone
    	</description>
        <env-entry-name>ibm.worklight.topology.clustermode</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Farm</env-entry-value>
    </env-entry>

    <env-entry>
    	<description>
    		The JMX connection type. Values: RMI / SOAP / REST. SOAP is the default in WAS server.
    	</description>
        <env-entry-name>ibm.worklight.admin.jmx.connector</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    	     [Optional] The host in which the Worklight Management Service is installed.
    	     Can be used with Websphere ND cluster.
    	     default: localhost 
    	</description>
        <env-entry-name>ibm.worklight.admin.jmx.dmgr.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    	     [Optional] The port which the Worklight Management Service is listening to.
    	     Can be used in a Websphere server type.
    	</description>
        <env-entry-name>ibm.worklight.admin.jmx.dmgr.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    	      [OPTIONAL] As each Worklight runtime must connect to a Management Service, 
    	      this property must be set for the runtime application with the same value 
    	      that the was set in the management service application.
    	</description>
        <env-entry-name>ibm.worklight.admin.environmentid</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
   <env-entry>
    	<description>
    		[OPTIONAL] Server identifier. Must be different for each server in the farm (farm of servers only)
    	</description>
        <env-entry-name>ibm.worklight.admin.serverid</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    
<env-entry>
        <env-entry-name>compress.response.threshold</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
</web-app>
